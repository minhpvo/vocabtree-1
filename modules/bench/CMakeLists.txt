CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/bench_config.hpp.cmake
			   ${CMAKE_CURRENT_SOURCE_DIR}/bench_config.hpp)

ADD_EXECUTABLE(bench_compute_features bench_compute_features.cxx)
INCLUDE_DIRECTORIES(bench_compute_features ${VOCAB_TREE_INCLUDE} ${OPENCV_INCLUDE_PATH})
TARGET_LINK_LIBRARIES(bench_compute_features search utils)
IF(ENABLE_MPI)
	 TARGET_LINK_LIBRARIES(bench_compute_features ${MPI_LIBRARIES})
ENDIF()

ADD_EXECUTABLE(bench_index bench_index.cxx)
INCLUDE_DIRECTORIES(bench_index ${VOCAB_TREE_INCLUDE} ${OPENCV_INCLUDE_PATH})
TARGET_LINK_LIBRARIES(bench_index search utils)
IF(ENABLE_MPI)
	 TARGET_LINK_LIBRARIES(bench_index ${MPI_LIBRARIES})
ENDIF()

ADD_EXECUTABLE(bench_bow bench_bow.cxx)
INCLUDE_DIRECTORIES(bench_bow ${VOCAB_TREE_INCLUDE} ${OPENCV_INCLUDE_PATH})
TARGET_LINK_LIBRARIES(bench_bow search utils)
IF(ENABLE_MPI)
	 TARGET_LINK_LIBRARIES(bench_bow ${MPI_LIBRARIES})
ENDIF()

ADD_EXECUTABLE(bench_search bench_search.cxx)
INCLUDE_DIRECTORIES(bench_search ${VOCAB_TREE_INCLUDE} ${OPENCV_INCLUDE_PATH} ${BOOST_INCLUDE_PATH})
TARGET_LINK_LIBRARIES(bench_search search utils vis)
IF(ENABLE_MPI)
	 TARGET_LINK_LIBRARIES(bench_search ${MPI_LIBRARIES})
ENDIF()

ADD_EXECUTABLE(bench_all bench_all.cxx)
INCLUDE_DIRECTORIES(bench_all ${VOCAB_TREE_INCLUDE} ${OPENCV_INCLUDE_PATH} ${BOOST_INCLUDE_PATH})
TARGET_LINK_LIBRARIES(bench_all search utils vis)
IF(ENABLE_MPI)
	 TARGET_LINK_LIBRARIES(bench_all ${MPI_LIBRARIES})
ENDIF()

ADD_EXECUTABLE(bench_final bench_final.cxx)
INCLUDE_DIRECTORIES(bench_final ${VOCAB_TREE_INCLUDE} ${OPENCV_INCLUDE_PATH} ${BOOST_INCLUDE_PATH})
TARGET_LINK_LIBRARIES(bench_final search utils vis)
IF(ENABLE_MPI)
	 TARGET_LINK_LIBRARIES(bench_final ${MPI_LIBRARIES})
ENDIF()
